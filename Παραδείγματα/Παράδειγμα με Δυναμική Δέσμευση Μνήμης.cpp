/*
Το παραπάνω πρόγραμμα δείχνει τη χρήση της δυναμικής δέσμευσης μνήμης με τους τελεστές new και delete.

Δημιουργείται ένας δείκτης a που δεσμεύει μνήμη για έναν ακέραιο και αρχικοποιείται με την τιμή 5. Η τιμή που δείχνει ο δείκτης a εκτυπώνεται.

Δημιουργείται ένας δείκτης b που δεσμεύει μνήμη για έναν δυναμικό πίνακα ακεραίων με μέγεθος 5. Στη συνέχεια, εκτυπώνονται τα στοιχεία του πίνακα b.

Τέλος, η μνήμη που δεσμεύτηκε για τον δείκτη a απελευθερώνεται με τον τελεστή delete, ενώ η μνήμη που δεσμεύτηκε για τον πίνακα b απελευθερώνεται με τον τελεστή delete[].
Οι σχολιασμένες γραμμές delete[] a; και delete b; δείχνουν μη συντακτικά σωστές εντολές, καθώς ο δείκτης a δεσμεύει μνήμη για έναν ακέραιο και όχι για έναν πίνακα ακεραίων.

*/

#include <iostream>

using namespace std;

int main (int argc, char **argv)
{
    int *a;
    int *b;
    a = new int(5); // Δέσμευση μνήμης για ένα ακέραιο και αρχικοποίησή του με την τιμή 5
    cout << *a << endl; // Εκτύπωση της τιμής που δείχνει ο δείκτης a
    b = new int[5]; // Δέσμευση δυναμικού πίνακα ακεραίων με μέγεθος 5
    for (int i = 0; i < 5; i++)
    cout << b[i]<< " "; // Εκτύπωση των στοιχείων του πίνακα b
    delete a; // Απελευθέρωση της μνήμης που δεσμεύθηκε για τον δείκτη a
    delete[] b; // Απελευθέρωση της μνήμης που δεσμεύθηκε για τον πίνακα b
}
